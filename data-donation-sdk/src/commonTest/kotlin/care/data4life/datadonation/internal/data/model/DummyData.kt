/*
 * BSD 3-Clause License
 *
 * Copyright (c) 2020, D4L data4life gGmbH
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 *  Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 *  Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package care.data4life.datadonation.internal.data.model

import care.data4life.datadonation.core.model.ConsentEvent
import care.data4life.datadonation.core.model.KeyPair
import care.data4life.datadonation.core.model.UserConsent

object DummyData {
    val timestamp = "2020-07-06T10:18:12.601Z"

    val userConsent = UserConsent(
        "key",
        "1.0.0",
        "a486a4db-a850-4b1d-9c84-99aa027f1000",
        ConsentEvent.Consent,
        timestamp
    )

    val rawData = byteArrayOf(10, 2, 5, 11, 8)

    val hexPrivate =
        "089a95f2fb0312f9090aec090a3a747970652e676f6f676c65617069732e636f6d2f676f6f676c652e63727970746f2e74696e6b2e527361537361507373507269766174654b657912ab0912910212060803100318201a810200c81996e2f45d2a25d2d03ba6a0a625f206136af26e413daf6689d78e46bf27a11a66bab5b65fe3075bd9a5514e1bff5f8d0602bb977fd13c427302dc0bc4614527dac899c1d0729c714381cdda8cb14965a456ab9c0cfc7799ba1a82516eef2d63a12024afc6663bce12afe00d72793ff61ba5d3b324982610d45f9296430e937702a528b75c8a985c76306fb771dfe5412fbe15388740eb20ffafd27be28df59bfdb7b23dc93e6c1fbf62e81b547b86bf053260f08a8021df156256888d311fa920a6845315029716690839ab419b883709abcdda6e27063c2385d41be98208ee510b46c4a67e1cc333cc9e8586aaf139b03226348a500ac58662af78b6212122030100011a8002369dc5716d0180df920b043d16dc42bf2ca960278bb08305bd17229ed2f09a007f144b220e055e12441fc3dfcd5217021d9be6630d96f5a55cfdc76a084c31c08e804900aec616825ce7f0261fe10702e19b598cbdab4dbdd757d4a47d55aa32d95ec147423304f48deacbd67bd52303324999998eec0e1b55bca1d980ea0caff7dca49b7b62f1eb45bafb5cc905a550d9f5222c26d1dc6e36af4b10537fe72bcc1c65c641961b40a5086e1956d3145f4c751437718d51d7c22801db0a1784457a769915fcbaf30fe60902a664a3e3f6293c5c42979c7d417bc20e00648d016cb8fd95f1d8f3fae61cf32c7da749a7875019ce0a393527c5124589ea8d9a000122810100e48f5be313eae899f15bf19e9a2c1adfd009ad9cf90a09afe39164b5f07aaada85da9a66628d9712cf586148ecbaedf745d6829358562f5161c2738587e3a9d6a56b79e7dab96b38d8c4a6efe5352542e5a982d1af47038d60949de94fe619e73f81660720958dbaa5c3f8030040c64bdb576f98572ec99ab8c3342f010c27c12a810100e01f87aad90c3baa45eb0f4e8866899f53c0e9111402e4cc23d21a92b80dbec26c930f0fc218e4d914bcd44225434bcf1e36eb9de253688e41cadc7452d45f07161510f4161c9fea047f9e6f38d98158d24165e8a65b81620f41d430997225d12965a491dc4fda7c55dcb0a5500b8525b7a20f6f13dd1d307a8569593447516132810100a0da8fd5894ffab154dedb763e94a9b93825878d00ebe29369fa0a41cd63d7588179aece3dafde51bba13c9e6114d1a304008ad6fe0571b9b9ae6b34dfc506e36c79ee4a91718b176fdf3e8978eb6534e682dcf18b84d3e82cbf8b3f071f2ebdc3c0e2b843635d62ad84f4c7cfe6c667de8f7397684c22508495c4e50bbcad413a810100bf21e47f0d0ee3ab386957ea6f6492a52fb5ea8d47f597cd8816dbd697e410f499c76826d62e88aba085d0b68034bde7ea2a8811633c22847f1353a2582908c9704992e5b61dbf3ac18f5c3c19cd5403bd7b4c3f75efbf8d32d9beed9b4ebf757aca55e8966bfb35e1bb8d61cdbba5571f1db3efd48ed31fcebd0bb4a962d0c14281010091a371473809d684fb2804176b62f877bc95f9b68965c5f2f603c13064ad6c91ad0738302e62ee9cb77945426db13cad9e7a7a81c280ca51832ef79c887796e8922cb233504082a65e68b2ad6925c8b673e7fd82ed6fc9884a35bcb402a1b1ae7862a7d574cc0c80fe4152631ee62201f5d3e4f4a413b9756439f829f7bc4ec318021001189a95f2fb032003"
    val hexPublic =
        "089a95f2fb0312de020ad1020a39747970652e676f6f676c65617069732e636f6d2f676f6f676c652e63727970746f2e74696e6b2e5273615373615073735075626c69634b657912910212060803100318201a810200c81996e2f45d2a25d2d03ba6a0a625f206136af26e413daf6689d78e46bf27a11a66bab5b65fe3075bd9a5514e1bff5f8d0602bb977fd13c427302dc0bc4614527dac899c1d0729c714381cdda8cb14965a456ab9c0cfc7799ba1a82516eef2d63a12024afc6663bce12afe00d72793ff61ba5d3b324982610d45f9296430e937702a528b75c8a985c76306fb771dfe5412fbe15388740eb20ffafd27be28df59bfdb7b23dc93e6c1fbf62e81b547b86bf053260f08a8021df156256888d311fa920a6845315029716690839ab419b883709abcdda6e27063c2385d41be98208ee510b46c4a67e1cc333cc9e8586aaf139b03226348a500ac58662af78b62121220301000118031001189a95f2fb032003"
    val keyPair = KeyPair(rawData, rawData)
}

